server {
    listen 8080;
    server_name localhost;

    # --- INTERNAL route for Nginx to serve images ---
    location /_internal_images/ {
        internal;  # Only accessible via backend's X-Accel-Redirect
        alias /var/www/cp3405-uploads/;  # Folder containing uploaded images
    }

    # --- API routes go to FastAPI backend ---
    # Here backend is the name of the docker container (change this localhost once on the real deployment server)
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /docs/ {
        proxy_pass http://backend:8000/docs/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # --- All other routes go to the frontend (React/Expo export) ---
    # This is for development only -> change to static host (build) for deployment
    location / {
        proxy_pass http://host.docker.internal:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Proxy HMR / Fast Refresh
    location /hot {
        proxy_pass http://host.docker.internal:8081/hot;  # Metro dev server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Proxy your app's WebSocket endpoint
    location /message {
        proxy_pass http://host.docker.internal:3000/message;  # or backend WS server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
